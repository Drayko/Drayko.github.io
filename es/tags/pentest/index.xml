<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>pentest on Drayko&#39;s Blog</title>
    <link>https://drayko.github.io/es/tags/pentest/</link>
    <description>Recent content in pentest on Drayko&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sat, 08 Aug 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://drayko.github.io/es/tags/pentest/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Bot Bounty, un bot para Pentesting y Bug Bounty</title>
      <link>https://drayko.github.io/es/post/bot-bounty-telegram-bot/</link>
      <pubDate>Sat, 08 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://drayko.github.io/es/post/bot-bounty-telegram-bot/</guid>
      <description>
        
          &lt;p&gt;Este proyecto se trata de un bot de Telegram con la capacidad de ejecutar comandos de terminal desde tu cuenta de Telegram y con la respuesta del comando como mensajes.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://drayko.github.io/images/bot-bounty-telegram-bot/bot.jpg&#34; alt=&#34;Vector de Tecnolog칤a creado por pch.vector - www.freepik.es&#34;&gt;&lt;/p&gt;
&lt;p&gt;Inicialmente este proyecto lo comenc칠 por necesidades personales, pero decid칤 liberarlo por la segura necesidad de muchos con el mismo problema que me encontr칠, y tomando como base un proyecto de &lt;a href=&#34;https://github.com/Va5c0&#34;&gt;Va5c0&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Muchas veces pasa en un pentest o m치s aun un bug bounty, que se necesita enumerar los objetivos o procesos que toman mucho tiempo como ciertos tipos de escaneos de nmap, crackear alg칰n hash. Y muchas veces por ese motivo paso a dejar ese proceso trabajando fij치ndome si ya termino o no, dejando la computadora encendida, en algunas ocasiones sin nada m치s que hacer, toco veces en que ya deb칤a salir y apagar la computadora dejando todo el proceso previo sin resultados. Es un gran coste de tiempo y dinero.&lt;/p&gt;
&lt;p&gt;Por lo que ahora comparto este peque침o proyecto de un bot(al que le bautice como Bot Bounty) que pueda ser utilizado tanto por una sola persona o varias, como una empresa que tenga esta misma necesidad para mejorar la productividad. Ya sea en una computadora, vps o una Raspberry. Conservando el grado de seguridad de que nadie m치s que las personas que se autoricen a usar el bot podr치n utilizarlo (por si alguien externo llegara a encontrarse con el bot y tratara de utilizarlo).&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://drayko.github.io/images/bot-bounty-telegram-bot/start.jpg&#34; alt=&#34;start&#34;&gt;&lt;/p&gt;
&lt;p&gt;El bot tiene opciones predefinidas para un acceso r치pido a informaci칩n que puede ser 칰til para el uso del bot. Por mencionar algunos: el espacio en RAM disponible (opci칩n info serv/RAM), o la IP publica que tiene el dispositivo en el que corre el bot.&lt;/p&gt;
&lt;p&gt;Adem치s, con el comando &lt;code&gt;/exec&lt;/code&gt; se puede ejecutar cualquier comando que est칠 disponible en nuestra terminal del dispositivo a usar, por ejemplo:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://drayko.github.io/images/bot-bounty-telegram-bot/helloWorld.jpg&#34; alt=&#34;hello world&#34;&gt;&lt;/p&gt;
&lt;p&gt;Limit치ndose as칤 para comandos que requieran interacci칩n, como alguna instalaci칩n sin forzar con el t칤pico &lt;code&gt;-y&lt;/code&gt; o logearse v칤a SSH, por nombrar unos ejemplos.&lt;/p&gt;
&lt;p&gt;Por defecto en su primer release viene con comandos r치pidos de amass y nmap, para empezar a usarlos en un pentest o bug bounty. por ejemplo, en amass, el comando es /amassenum, el cual llama a &lt;code&gt;$ amass enum -d&lt;/code&gt; para realizar una enumeraci칩n de subdominios:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://drayko.github.io/images/bot-bounty-telegram-bot/amassEnum.jpg&#34; alt=&#34;amass&#34;&gt;&lt;/p&gt;
&lt;p&gt;En nmap tenemos un escaneo con los scripts, por default, sacar las versiones de los puertos encontrados, evitar realizar el descubrimiento del host (verificar si est치 vivo), y buscar en todos los puertos posibles; es decir: &lt;code&gt;$ nmap -sC -sV -Pn -p-&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://drayko.github.io/images/bot-bounty-telegram-bot/customNmap.jpg&#34; alt=&#34;nmap&#34;&gt;&lt;/p&gt;
&lt;p&gt;Claro que para lograr utilizar estos comandos deber치 estar instaladas las herramientas en el sistema que est칠n utilizando para correr el bot (adem치s que se las pueda llamar directamente en consola)&lt;/p&gt;
&lt;p&gt;Como primer release, solamente se tienen esos comandos, sin embargo &lt;strong&gt;quedo a la espera de otros comandos de atajo para a침adir al bot que sugieran&lt;/strong&gt;. Adem치s, si encuentran errores me pueden escribir o lanzar un issue en el repositorio.&lt;/p&gt;
&lt;p&gt;El repositorio es el siguiente: &lt;a href=&#34;https://github.com/Drayko/Bot-Bounty&#34;&gt;Bot Bounty&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;configuraciones-previas&#34;&gt;Configuraciones previas&lt;/h2&gt;
&lt;p&gt;Para poder usarlo previamente deber치n crearse un bot en Telegram reemplazar la API KEY que da por el valor que se especifica en el script en la l칤nea 12.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;TOKEN&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;XXXXXX:XXXXXXXXXXXXXXXX&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Adem치s de registrar el ID de usuario(s) que usaran el bot, en la l칤nea 14:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;authorizedUsers&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;123456789&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;987654321&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Y ahora simplemente queda correr el script&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;$ python3 bot.py
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;tips&#34;&gt;Tips&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Si el output del comando es demasiado grande, debe guardarla en un archivo y sin output.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;por ejemplo:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;\nmapadv example.com &amp;gt; resultadosExample.txt&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\nmapadv example.com -oN resultadosExample.txt&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\exec echo &#39;awesome bot!&#39; &amp;gt; yesItIs.txt&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Para revisar posibles usuarios no autorizados tratando de usar el bot, se guarda un registro de todos los comandos ejecutados con detalles de usuario en el archivo &lt;code&gt;logFileBot.txt&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Y eso ser칤a por ahora, espero sea bien recibido este trabajo.&lt;/p&gt;
&lt;p&gt;-Hackers are People Too 游땦&lt;/p&gt;
        
      </description>
    </item>
    
  </channel>
</rss>
