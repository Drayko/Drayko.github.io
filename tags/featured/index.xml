<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>featured on Drayko&#39;s Blog</title>
    <link>https://drayko.github.io/tags/featured/</link>
    <description>Recent content in featured on Drayko&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sat, 08 Aug 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://drayko.github.io/tags/featured/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Bot Bounty, a bot for Pentesting &amp; Bug Bounty</title>
      <link>https://drayko.github.io/post/bot-bounty-telegram-bot/</link>
      <pubDate>Sat, 08 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://drayko.github.io/post/bot-bounty-telegram-bot/</guid>
      <description>
        
          &lt;p&gt;This project is about a Telegram bot with the ability to execute terminal commands from your Telegram account and with the command response as messages.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://drayko.github.io/images/bot-bounty-telegram-bot/bot.jpg&#34; alt=&#34;Technology vector created by pch.vector - www.freepik.es&#34;&gt;&lt;/p&gt;
&lt;p&gt;Initially, I started this project for personal needs, but I decided to release it because of the sure need of many with the same problem. I encountered and based in a project of &lt;a href=&#34;https://github.com/Va5c0&#34;&gt;Va5c0&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It often happens in a pentest or even more a bug bounty, that you need to enumerate targets or processes that take a lot of time as certain types of nmap scans, cracking some hash. And many times for that reason I leave that process working, checking if it is finished or not, leaving the computer on, sometimes with nothing else to do, sometimes I had to leave and turn off the computer leaving all the previous process without results. It is a high cost of time and money.&lt;/p&gt;
&lt;p&gt;So now I share this little project of a bot (which I baptized as Bot Bounty) that can be used by a single person or several, as a company with this same need to improve productivity. Either on a computer, VPS, or a Raspberry. Keeping the degree of security that no one but the people who are authorized to use the bot will use it (in case someone external comes across the bot and try to use it).&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://drayko.github.io/images/bot-bounty-telegram-bot/start.jpg&#34; alt=&#34;start&#34;&gt;&lt;/p&gt;
&lt;p&gt;The bot has predefined options for quick access to information that can be useful for bot usage. To mention a few: the available RAM space (info serv/RAM option), or the public IP of the device on which the bot is running.&lt;/p&gt;
&lt;p&gt;In addition, with the command &lt;code&gt;/exec&lt;/code&gt; you can execute any command that is available in our terminal of the device to use, for example:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://drayko.github.io/images/bot-bounty-telegram-bot/helloWorld.jpg&#34; alt=&#34;hello world.&#34;&gt;&lt;/p&gt;
&lt;p&gt;Thus limiting itself to commands that require interaction, such as some unforced installation with the typical &lt;code&gt;-y&lt;/code&gt; or logging in via SSH, to name a few examples.&lt;/p&gt;
&lt;p&gt;For example, in amass, the command is /amassenum, which calls &lt;code&gt;$ amass enum -d&lt;/code&gt; to perform an enumeration of subdomains:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://drayko.github.io/images/bot-bounty-telegram-bot/amassEnum.jpg&#34; alt=&#34;amass&#34;&gt;&lt;/p&gt;
&lt;p&gt;In nmap we have a scan with the scripts, by default, pull out the port versions found, avoid performing host discovery (check if it is alive), and search all possible ports; i.e.: &lt;code&gt;$ nmap -sC -sV -Pn -p-&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://drayko.github.io/images/bot-bounty-telegram-bot/customNmap.jpg&#34; alt=&#34;nmap&#34;&gt;&lt;/p&gt;
&lt;p&gt;Of course, to use these commands, the tools must be installed in the system you are using to run the bot (and you can call them directly in the console).&lt;/p&gt;
&lt;p&gt;As a first release, we only have these commands; however, &lt;strong&gt;I am waiting for other shortcut commands to add to the bot that you suggest&lt;/strong&gt;. Also, if you find bugs, you can write to me or issue an issue in the repository.&lt;/p&gt;
&lt;p&gt;The repository is as follows: &lt;a href=&#34;https://github.com/Drayko/Bot-Bounty&#34;&gt;Bot Bounty&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;pre-configurations&#34;&gt;Pre-configurations&lt;/h2&gt;
&lt;p&gt;To use it previously you must create a bot in Telegram and replace the API KEY that gives by the value specified in the script at line 12.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;TOKEN&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;XXXXXX:XXXXXXXXXXXXXXXXXXXXXXXX&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In addition to register the user ID(s) that will use the bot, in line 14:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;authorizedUsers&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;123456789&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;987654321&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And now just run the script.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;$ python3 bot.py
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;tips&#34;&gt;Tips&lt;/h1&gt;
&lt;p&gt;**If the command&#39;s output is too big, you should save it in a file and without output **.&lt;/p&gt;
&lt;p&gt;for example:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;nmapadv example.com &amp;gt; resultsExample.txt&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nmapadv example.com -oN resultsExample.txt&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;exec echo &#39;awesome bot!&#39; &amp;gt; yesItIs.txt&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To check for possible unauthorized users trying to use the bot, a log of all executed commands with user details is kept in the file &lt;code&gt;logFileBot.txt&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;And that would be it, for now; I hope this work is well received.&lt;/p&gt;
&lt;p&gt;-Hackers are People Too ðŸ˜œ&lt;/p&gt;
        
      </description>
    </item>
    
    <item>
      <title>WriteUp CTF CIDSI 2018</title>
      <link>https://drayko.github.io/post/writeup-cidsi18/</link>
      <pubDate>Mon, 18 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://drayko.github.io/post/writeup-cidsi18/</guid>
      <description>
        
          &lt;p&gt;This CTF was composed of 74 teams from universities convened nationally for undergraduate and graduate level at the International Congress Of Computer Security (CIDSI in Spanish) which was organized by the Agency of Electronic Government and Information and Communication Technologies (AGETIC in Spanish). Thanks to the efforts of the Computer Incident Management Center(CGII) held from November 29 to December 1, 2018.&lt;/p&gt;
&lt;p&gt;Finishing this series, and as I mentioned in the previous &lt;a href=&#34;https://drayko.github.io/post/writeup-ctfumss18/&#34;&gt;post&lt;/a&gt;, in this one we participated in Team as &lt;strong&gt;Dark Army&lt;/strong&gt; with &lt;a href=&#34;https://www.facebook.com/israel.arispe.16&#34;&gt;Israel&lt;/a&gt;, &lt;a href=&#34;https://www.facebook.com/rrafalinux&#34;&gt;Rafael&lt;/a&gt; and my &lt;a href=&#34;http://twitter.com/DraykoEs&#34;&gt;person&lt;/a&gt;, accomplishing to solve all the challenges; However we could not recover all the statements or the specific flags(As they were written in &lt;em&gt;literal&lt;/em&gt; form in the event), but they are explained as we solved it in the CTF, which lasted two half days.&lt;/p&gt;
&lt;h2 id=&#34;level-1&#34;&gt;Level 1&lt;/h2&gt;
&lt;h3 id=&#34;11-traffic-analysis-1&#34;&gt;1.1. Traffic Analysis 1&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Welcome. A company dedicated to banking has just hired you to perform traffic analysis. The problem is that there is an employee who is leaking email addresses, at the same time another employee started to pass passwords that have privileges to modify the salaries of employees. Your mission is to find that password.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Well, to begin with, they give us &lt;a href=&#34;https://mega.nz/#!fBg2wQKa!kdee9u24oGPWWz0e0LEk_KAD5J_gsgPa8plzzuSgdZdk&#34;&gt;a traffic capture&lt;/a&gt;, in which when we search with &lt;a href=&#34;https://es.wikipedia.org/wiki/Wireshark&#34;&gt;Wireshark&lt;/a&gt; we find a request with the username and password.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://drayko.github.io/images/writeup-cidsi18/cidsi1.png&#34; alt=&#34;capture of a part of the packets already filtered&#34;&gt;&lt;/p&gt;
&lt;p&gt;then the flag is:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;007
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h3 id=&#34;12-web-crawlers&#34;&gt;1.2 Web crawlers&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Unfortunately search engines are indexing many pages of this website that are confidential to us! Do you know which file prevents this from happening? Nobody wants fully indexed sites right?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This is quite easy, the Flag is inside the &lt;a href=&#34;https://support.google.com/webmasters/answer/6062608?hl=es&#34;&gt;robots.txt&lt;/a&gt;, which provides information to the search engine crawlers about the pages or files that they can request or not from your website.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;http://url/robots.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h3 id=&#34;13-backups&#34;&gt;1.3 Backups&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;PetrÃ³leos del Caribe asked us to save a backup of its main jsp file. Unfortunately, the engineer in charge went to a plant in the middle of the sea and he can&#39;t tell us the extension with which he saved them. The supply manager requires the backup urgently, can you help me identify which file it is in? Do it soon my position is at stake. Remember that the most common backup extensions are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;bak&lt;/li&gt;
&lt;li&gt;old&lt;/li&gt;
&lt;li&gt;bakup&lt;/li&gt;
&lt;li&gt;save&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;In this one we had to be somewhat observant, as much in the track as in what we have in front of us, it tells us the main jsp, which would come to mean the index.jsp in addition that the current page is &lt;code&gt;http://url/index.jsp&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;So trying with the extensions that they suggest us, it is possible to arrive to the answer&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;http://url/index.jsp.bakup
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Which contains&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 1&lt;/span&gt;&amp;lt;%@ page contentType=&amp;#34;text/html; charset=UTF-8&amp;#34; pageEncoding=&amp;#34;UTF-8&amp;#34; language=&amp;#34;java&amp;#34; import=&amp;#34;java.sql.*,java.io.*,java.net.*,org.owasp.encoder.Encode, dbProcs.*, utils.*&amp;#34; errorPage=&amp;#34;&amp;#34; %&amp;gt;
&lt;span class=&#34;ln&#34;&gt; 2&lt;/span&gt;&amp;lt;%@ page import=&amp;#34;java.util.Locale&amp;#34;%&amp;gt;
&lt;span class=&#34;ln&#34;&gt; 3&lt;/span&gt;&amp;lt;%@ include file=&amp;#34;translation.jsp&amp;#34; %&amp;gt;
&lt;span class=&#34;ln&#34;&gt; 4&lt;/span&gt;&amp;lt;%
&lt;span class=&#34;ln&#34;&gt; 5&lt;/span&gt;	ShepherdLogManager.logEvent(request.getRemoteAddr(), request.getHeader(&amp;#34;X-Forwarded-For&amp;#34;), &amp;#34;DEBUG: index.jsp *************************&amp;#34;);
&lt;span class=&#34;ln&#34;&gt; 6&lt;/span&gt;	Locale lang = new Locale(Validate.validateLanguage(request.getSession()));
&lt;span class=&#34;ln&#34;&gt; 7&lt;/span&gt;/**
&lt;span class=&#34;ln&#34;&gt; 8&lt;/span&gt;The flag/flag is: 402051f4be0cc3aad33bcf3ac3d6532b.
&lt;span class=&#34;ln&#34;&gt; 9&lt;/span&gt; */
&lt;span class=&#34;ln&#34;&gt;10&lt;/span&gt;%&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;then that&#39;s where we get the flag&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;402051f4be0cc3aad33bcf3ac3d6532b
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h3 id=&#34;14-programmer-program&#34;&gt;1.4 Programmer program&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;One of your friends left you a clue in java code development, but you must solve a mathematical puzzle before you can find the result. The flag is the key to enter his system (the smallest number you can find). But this is easy for you, they are not differential equations.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;give us a java file&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 1&lt;/span&gt;&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;exploit&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 2&lt;/span&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;java.util.Scanner&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 3&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 4&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;KeithLikesToTroll&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 5&lt;/span&gt;    &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;){&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 6&lt;/span&gt;        &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;clave&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 7&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 8&lt;/span&gt;        &lt;span class=&#34;n&#34;&gt;Scanner&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;scn&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Scanner&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;in&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 9&lt;/span&gt;        &lt;span class=&#34;n&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;out&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Introdusca la llave: &amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;10&lt;/span&gt;        &lt;span class=&#34;n&#34;&gt;clave&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;scn&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;nextInt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;11&lt;/span&gt;        &lt;span class=&#34;n&#34;&gt;scn&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;close&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;12&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;13&lt;/span&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;1338557220&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;clave&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;clave&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;1338557220&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;clave&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;){&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;14&lt;/span&gt;            &lt;span class=&#34;n&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;out&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Autenticacion correcta. La bandera es un nÃºmero pequeÃ±o que te dejara entrar.&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;15&lt;/span&gt;        &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;16&lt;/span&gt;            &lt;span class=&#34;n&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;out&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Autenticacion incorrecta.&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;17&lt;/span&gt;        &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;18&lt;/span&gt;    &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;19&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Which should be compiled and executed in such a way that the lowest number of correct, with brute force can be reached quickly.&lt;/p&gt;
&lt;p&gt;The Flag:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;8
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h3 id=&#34;15-wifi-admin-panel&#34;&gt;1.5 Wifi admin panel&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;We are on vacation in the Caribbean, unfortunately, because of your friend the flight has just left us and we are waiting for 5 long hours at the airport. Another one of your friends found out that they can access free internet at the airport but to do so you must log in to the router. Do you dare to try how to log in?&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://drayko.github.io/images/writeup-cidsi18/cidsismc.png&#34; alt=&#34;login screenshot&#34;&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;For this, we need to observe well, and the clue they give us is SMC Networks, which is a brand that produces Routers among other things, which with a little search &lt;a href=&#34;https://www.router-reset.com/default-password-ip-list/SMC&#34;&gt;we have some combinations&lt;/a&gt; of Users and Passwords by default which we try to find the correct and get the flag&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;level-2&#34;&gt;Level 2&lt;/h2&gt;
&lt;h3 id=&#34;21-steganography&#34;&gt;2.1 Steganography&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Did you know that the technique of hiding messages or objects inside images so that their existence is not perceived is steganography. We love this technique. So I will leave this image here and go very slowly.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mega.nz/#!PR50FC5b!54bX1ROKIMlzeqMJ21VOlohCBPPzvIiCjOed0bsGDTvw&#34;&gt;image to download&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This at first puzzled us, however, the solution is to extract each printable string in the image, using &lt;code&gt;strings&lt;/code&gt; &lt;a href=&#34;http://www.linfo.org/strings.html&#34;&gt;from console(on Linux)&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;strings 8c373fd1a.jpeg
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And the Flag:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;1e5b77443345620c52d23c73dc87521c
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h3 id=&#34;22-forensics&#34;&gt;2.2 Forensics&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;A dangerous criminal is passing hidden messages in pdfs sent by his accomplice abroad. You can do an analysis, you&#39;re almost a hacker. Did you find your flag?
&lt;a href=&#34;https://mega.nz/#!HFgyEaCZ!GWz3y3qfn5cxs2Vb7JOxdvjqzCKOFSm3qL4L1Gd4nuA&#34;&gt;Download document&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In this case, parsing the metadata gives us the spoils; With the use of &lt;a href=&#34;https://en.wikipedia.org/wiki/ExifTool&#34;&gt;Exiftool&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;exiftool CIDSI2018.pdf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And the Flag:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;c47d187067c6cf9
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h3 id=&#34;23-sql-injection&#34;&gt;2.3 SQL Injection&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;We know that the coyote buys all his artifacts from ACME, can you help us display all the tuples in the table to find the trap with which he finally catches his nemesis?&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://drayko.github.io/images/writeup-cidsi18/sql.png&#34; alt=&#34;search engine to test&#34;&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;When I saw this one I thought it would take a while, however when I tried any injection a copy of the query I made appeared at the top, very Bricks style. So finding the solution was very quick with a typical bypass injection.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;)or(&amp;#39;&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;)=(&amp;#39;&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Which gave us the Flag.&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;24-reverse-engineering&#34;&gt;2.4 Reverse Engineering&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;One of the biggest dangers in mobile applications is reverse engineering. Because we can inspect the source code and find API keys, passwords, etc. We found an apk file while you were checking shared resources, luckily we saved it, now we want to know what it contains. There are several tools available to reverse engineer an APK file.
&lt;a href=&#34;https://mega.nz/#!CAgDzIhQ!oIUMDCtFxLuahZ3xTmtDbii8kv8Gc4-7ZtrE5VS7maM&#34;&gt;Download APK&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;As mentioned in the statement, there are several tools, I preferred to use &lt;a href=&#34;https://github.com/iBotPeaches/Apktool&#34;&gt;Apktool&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;apktool d reversing.apk
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;which gives us a folder with everything extracted, in which you can do a quick search with &lt;a href=&#34;https://es.wikipedia.org/wiki/Grep&#34;&gt;grep&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;user@pc:# grep &lt;span class=&#34;s2&#34;&gt;&amp;#34;flag&amp;#34;&lt;/span&gt; . -R
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;./reversing/smali/com/mobshep/reverseengineer/Reverse_Engineering.smali: const-string v0, &lt;span class=&#34;s2&#34;&gt;&amp;#34;The flag/flag is 9yfdsj3md0lq75&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;and the Flag!&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;9yfdsj3md0lq75
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;level-3&#34;&gt;Level 3&lt;/h2&gt;
&lt;h3 id=&#34;31-traffic-analysis-2&#34;&gt;3.1 Traffic analysis 2.&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;We are performing a traffic analysis because we detected that someone is leaking confidential information and the amount of information is so large that they compressed it with password protection, but finding the password is easy for you. Help us to find the password that will help us to access our flag.
&lt;a href=&#34;https://mega.nz/#!HYxF0KDC!jJcMHVg_k_p0SkvE4qo0z6sk9Z7U60UQ-qRgWhYmPnw&#34;&gt;Download capture&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;https://drayko.github.io/images/writeup-cidsi18/cidsizip1.png&#34; alt=&#34;a part of the package capture&#34;&gt;&lt;/p&gt;
&lt;p&gt;Finding the zip was not difficult, we only had to export it with &lt;code&gt;Export Packet Bytes&lt;/code&gt; or exporting all the objects. Once arrived at this point the zip that we obtain is protected with a password as mentioned in the statement, for that, we had to observe the capture&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://drayko.github.io/images/writeup-cidsi18/cidsizip2.png&#34; alt=&#34;a hint in the screenshot&#34;&gt;&lt;/p&gt;
&lt;p&gt;the zip password&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;azulcrema
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;and the flag!&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;IW{HTTP_BASIC_AUTH_IS_EASY}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h3 id=&#34;32-user-list&#34;&gt;3.2 User list&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;A group of users decided to complain because there is no coffee, can you believe it. And one of the users seems to be the one stealing the coffee, of course, he hid himself from the list. Help me find him and bring back the coffee to our lives.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://drayko.github.io/images/writeup-cidsi18/cidsiuseres.png&#34; alt=&#34;list of users&#34;&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In this one it took me a while to realize, we were given a choice between consulting the information of 5 users, however, there was not something relevant among them, I tried to search by inspecting the elements, and the requests, however, the clue was in how the requests were made.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 1&lt;/span&gt;POST /challenges/vc9b78627df2c032ceaf7375df1d847e47ed7abac2a4ce4cb6086646e0f313a4 HTTP/1.1
&lt;span class=&#34;ln&#34;&gt; 2&lt;/span&gt;Host: 192.168.3.100
&lt;span class=&#34;ln&#34;&gt; 3&lt;/span&gt;Accept: **
&lt;span class=&#34;ln&#34;&gt; 4&lt;/span&gt;Accept-Language: en-US,en:q-0.5
&lt;span class=&#34;ln&#34;&gt; 5&lt;/span&gt;Accept-Encoding: gzip, deflate
&lt;span class=&#34;ln&#34;&gt; 6&lt;/span&gt;Referer: https://192.168.3.100/challenges/vc9b78627df2c032ceaf7375df1d847e47ed7abac2a4ce4cb6086646eOf313a4.jsp
&lt;span class=&#34;ln&#34;&gt; 7&lt;/span&gt;Content-Type: application/X-WWW-form-urlencoded
&lt;span class=&#34;ln&#34;&gt; 8&lt;/span&gt;X-Requested-With: XMLHttpRequest
&lt;span class=&#34;ln&#34;&gt; 9&lt;/span&gt;Content-Length: 45
&lt;span class=&#34;ln&#34;&gt;10&lt;/span&gt;Connection: close
&lt;span class=&#34;ln&#34;&gt;11&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;12&lt;/span&gt;userId%5B%5D=cfcd208495d565ef66e7dff9f98764da
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The request was identified this way: &lt;code&gt;cfcd208495d565ef66e7dff9f98764da&lt;/code&gt;, which when verified was an MD5 and in plain text value &lt;code&gt;0&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;cfcd208495d565ef66e7dff9f98764da = 0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;When checking the others, they worked the same way, so I generated a list of MD5 hashed numbers to make requests until I found the hidden user, which was no more than the number &lt;code&gt;20&lt;/code&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;33-hashdump&#34;&gt;3.3 HASHDUMP&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Find the admin password&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;sistemas:500:9E689B23C4D33D88E4C560258374B547:7E058F739B8A1E67C00815FC1E5E0E25:::
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;Guest:501:NO PASSWORD*********************:NO PASSWORD*********************:::
&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;nonadmin:1005:NO PASSWORD*********************:0CF3760C0B0EB9F570AACE7040DF6DB7:::
&lt;span class=&#34;ln&#34;&gt;4&lt;/span&gt;contabilidad:1013:23AC1B85C36D31AAE45E0AE1804A24B0:DE6D8B1780A4F0714242AC53A6C2B2E8:::
&lt;span class=&#34;ln&#34;&gt;5&lt;/span&gt;administrador:1014:CE9F401800DF01AFFF959C003A9671D0:A7B9ECDD64AA492E449E0A619FD16E4B:::
&lt;span class=&#34;ln&#34;&gt;6&lt;/span&gt;gerencia:1015:4978646A5C99C2834D6A97A372D4BC83:C7994B298128024418AD0E9C5038570C:::
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;We can see that it is a dump of the Windows (NTLM) hashes.&lt;/p&gt;
&lt;p&gt;This one took a while to figure out the trick, at first glance one would think that the admin account would be the one with such a name or similar, however, the trick was in the &lt;a href=&#34;https://en.wikipedia.org/wiki/Relative_identifier&#34;&gt;RID&lt;/a&gt;. The &lt;code&gt;500&lt;/code&gt; belongs to the administrator account created during the OS installation, although in this case it is called &lt;code&gt;sistemas&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Then we have 2 ways to find it by brute force/dictionary or to look for it, to save time better to look for it and so we have, the flag!&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;coldplay
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;level-4&#34;&gt;Level 4&lt;/h2&gt;
&lt;h3 id=&#34;41-cracking-rar&#34;&gt;4.1 Cracking rar&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;The users of the insurance company SEGURITAS are driving the systems staff crazy with their famous changes. As if they were going to change the world. If you are clever you will be able to access the flag that is compressed and password protected A systems employee has a clue for you. His id from a popular social network is 0x5afa18273c14.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://mega.nz/#!KVpVEAwK!25833wfpu32YvtYX6RbQqqtptLLLPI5LHbmyDaZvel-n4&#34;&gt;Download&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;First the &lt;code&gt;id&lt;/code&gt; must be converted from Hexadecimal, then we get: &lt;code&gt;100030193548308&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Now in facebook, we look for the profile: &lt;code&gt;https://www.facebook.com/100030193548308&lt;/code&gt; in which we find pictures of the employee spreading critical information about the company like that for &lt;code&gt;rar&lt;/code&gt; files the password must have a number of length &lt;code&gt;5&lt;/code&gt;, then the only thing left is to crack the rar with a dictionary with all the possibilities of 5 digits numerals with &lt;a href=&#34;https://es.wikipedia.org/wiki/John_the_Ripper&#34;&gt;John The Ripper&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;john --wordlist&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;six --format&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;rar5 hashrar
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;hashrar&lt;/code&gt; is the file where the hash of the RAR is located, then, we have the password.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;60372
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;With this we can extract the flag inside the archive:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;8743b52063cd84097a65d1633f5c74f5
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h3 id=&#34;42-website-bank&#34;&gt;4.2 Website bank&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;To complete this challenge you must create a bank account and transfer more than 10000 bs to it. When you have that amount in your bank account, simply log out and log in again to be rewarded with the flag.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://drayko.github.io/images/writeup-cidsi18/cidsibanco1.png&#34; alt=&#34;bank panel&#34;&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;To start with you have to register, and the platform gives us the possibility to transfer money to other accounts&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://drayko.github.io/images/writeup-cidsi18/cidsibanco2.png&#34; alt=&#34;transfer panel&#34;&gt;&lt;/p&gt;
&lt;p&gt;However intercepting the requests was insecure, similar to this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;accountSource=4&amp;amp;accountDestination=2&amp;amp;amount=1200
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;so by modifying the request, we can reverse this&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;accountSource=2&amp;amp;accountTarget=4&amp;amp;amount=1200
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;this way we transfer money to ourselves, here is the result:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://drayko.github.io/images/writeup-cidsi18/cidsibanco3.png&#34; alt=&#34;Result&#34;&gt;&lt;/p&gt;
&lt;p&gt;Voila!&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;0738FF78AE98A11F579A70F3F98468097426D4652B32A5F978818FC9CCB66CE74371A28833CC1A52854697C734D66249DB8E9AAB67F024262436EC8220C9OF11
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;level-5&#34;&gt;Level 5&lt;/h2&gt;
&lt;h3 id=&#34;51-exploiting&#34;&gt;5.1 Exploiting&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;We are doing safe development, Your challenge is to change the flow of the program so that the hidden function executes. Once you succeed I will congratulate you on your success. The flag is the hexadecimal address of the function beat with the correct format (0x11223344)
&lt;a href=&#34;https://mega.nz/#!jMhziKpa!Anhy2D_GuOI2qw3umtPfFQA2ydNJJJgCPOJbq8Jg3ZCA&#34;&gt;Download program&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;For this one, we had to use &lt;a href=&#34;https://es.wikipedia.org/wiki/Interactive_Disassembler&#34;&gt;IdaPro&lt;/a&gt;, and look for the address.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://drayko.github.io/images/writeup-cidsi18/cidsilast.png&#34; alt=&#34;capture from IdaPro&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;0x080484BB
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And that would be it!&lt;/p&gt;
&lt;p&gt;However we could not take 1st place by six points, because those who solved a challenge first had extra points, but we were very happy with the great team we formed; being in 2nd place among so many teams.&lt;/p&gt;
&lt;p&gt;Any doubt, question, or complaint &lt;a href=&#34;http://t.me/DraykoEs&#34;&gt;you can write me&lt;/a&gt;, I hope you liked the WriteUp.&lt;/p&gt;
&lt;p&gt;-Hackers are People Too ðŸ˜œ&lt;/p&gt;
&lt;h3 id=&#34;links-of-interest&#34;&gt;&lt;em&gt;links of interest&lt;/em&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Full undergraduate/postgraduate standings, &lt;a href=&#34;https://www.cgii.gob.bo/eventos/cidsi2018/competencia.html&#34;&gt;click here&lt;/a&gt;
the challenges were the same for both grades&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To view event information &lt;a href=&#34;https://www.cgii.gob.bo/eventos/cidsi2018/&#34;&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;series-links&#34;&gt;&lt;em&gt;series links&lt;/em&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://drayko.github.io/es/post/writeup-ctfumss18/&#34;&gt;CTF UMSS WriteUp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://drayko.github.io/es/post/writeup-democidsi18/&#34;&gt;WirteUp Demo CTF CTF CIDSI 2018&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
        
      </description>
    </item>
    
  </channel>
</rss>
